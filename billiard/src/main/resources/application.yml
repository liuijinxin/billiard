server:
    port: 7008
game:
    matchStrategy: 0
spring:
    application:
        name: billiard
    datasource:
        url: jdbc:mysql://127.0.0.1/game?useSSL=false&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull
        username: root
        driver-class-name: com.mysql.jdbc.Driver
        password: aHNOjqtl%pKp
        name: dataSource1
        type: com.alibaba.druid.pool.DruidDataSource
        druid:
            initial-size: 10
            min-idle: 10
            max-active: 50
            max-wait: 60000
            timeBetweenEvictionRunsMillis: 60000
            # 配置一个连接在池中最小生存的时间，单位是毫秒
            minEvictableIdleTimeMillis: 30000
            validationQuery: select 'x'
            testWhileIdle: true
            testOnBorrow: false
            testOnReturn: false
            # 打开PSCache，并且指定每个连接上PSCache的大小
            poolPreparedStatements: true
            maxPoolPreparedStatementPerConnectionSize: 20
            # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
            filters: stat,wall,slf4j
            # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
            connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
            # 合并多个DruidDataSource的监控数据
            #useGlobalDataSourceStat: true
dubbo:
    application:
        name: billiard
    registry:
        address: 127.0.0.1:2181
        protocol: zookeeper
    #        check: false
    protocol:
        name: dubbo
        port: 20880
    scan:
        base-packages: com.wangpo.billiard
    consumer:
        check: false
mybatis:
    type-handlers-package: com.wangpo.billiard.mapper